
Allocating common symbols
Common symbol       size              file

string_buffer_4     0x4               app.o
string_buffer_3     0x4               app.o

Memory Configuration

Name             Origin             Length             Attributes
Mem              0x00000000         0x04000000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00010000                . = 0x10000

.startup        0x00010000       0x10
 startup.o(.text)
 .text          0x00010000       0x10 startup.o
                0x00010000                reset

.text           0x00010010       0x70
 *(.text)
 .text          0x00010010       0x1c app.o
                0x00010010                main
 .text          0x0001002c       0x54 uart.o
                0x0001002c                Uart_Send_string
 *(.rodata)

.glue_7         0x00010080        0x0
 .glue_7        0x00010080        0x0 linker stubs

.glue_7t        0x00010080        0x0
 .glue_7t       0x00010080        0x0 linker stubs

.vfp11_veneer   0x00010080        0x0
 .vfp11_veneer  0x00010080        0x0 linker stubs

.v4_bx          0x00010080        0x0
 .v4_bx         0x00010080        0x0 linker stubs

.iplt           0x00010080        0x0
 .iplt          0x00010080        0x0 startup.o

.rel.dyn        0x00010080        0x0
 .rel.iplt      0x00010080        0x0 startup.o

.data           0x00010080       0xc8
 *(.data)
 .data          0x00010080        0x0 startup.o
 .data          0x00010080       0xc8 app.o
                0x00010080                string_buffer
                0x000100e4                string_buffer_2
 .data          0x00010148        0x0 uart.o

.igot.plt       0x00010148        0x0
 .igot.plt      0x00010148        0x0 startup.o

.bss            0x00010148        0x8
 *(.bass)
 *(COMMON)
 COMMON         0x00010148        0x8 app.o
                0x00010148                string_buffer_4
                0x0001014c                string_buffer_3
                0x00011150                . = (. + 0x1000)
                0x00011150                stack_top = .
LOAD startup.o
LOAD app.o
LOAD uart.o
OUTPUT(learn-in-depth.elf elf32-littlearm)

.bss            0x00010150        0x0 load address 0x00011150
 .bss           0x00010150        0x0 startup.o
 .bss           0x00010150        0x0 app.o
 .bss           0x00010150        0x0 uart.o

.ARM.attributes
                0x00000000       0x2e
 .ARM.attributes
                0x00000000       0x22 startup.o
 .ARM.attributes
                0x00000022       0x32 app.o
 .ARM.attributes
                0x00000054       0x32 uart.o

.comment        0x00000000       0x7e
 .comment       0x00000000       0x7e app.o
                                 0x7f (size before relaxing)
 .comment       0x0000007e       0x7f uart.o

.debug_line     0x00000000       0xac
 .debug_line    0x00000000       0x3a startup.o
 .debug_line    0x0000003a       0x37 app.o
 .debug_line    0x00000071       0x3b uart.o

.debug_info     0x00000000      0x13f
 .debug_info    0x00000000       0x26 startup.o
 .debug_info    0x00000026       0xc2 app.o
 .debug_info    0x000000e8       0x57 uart.o

.debug_abbrev   0x00000000       0xcb
 .debug_abbrev  0x00000000       0x14 startup.o
 .debug_abbrev  0x00000014       0x66 app.o
 .debug_abbrev  0x0000007a       0x51 uart.o

.debug_aranges  0x00000000       0x60
 .debug_aranges
                0x00000000       0x20 startup.o
 .debug_aranges
                0x00000020       0x20 app.o
 .debug_aranges
                0x00000040       0x20 uart.o

.debug_str      0x00000000      0x126
 .debug_str     0x00000000       0x41 startup.o
 .debug_str     0x00000041       0xc1 app.o
                                 0xe9 (size before relaxing)
 .debug_str     0x00000102       0x24 uart.o
                                 0xb7 (size before relaxing)

.debug_frame    0x00000000       0x5c
 .debug_frame   0x00000000       0x2c app.o
 .debug_frame   0x0000002c       0x30 uart.o
